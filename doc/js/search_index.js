var search_data = {"index":{"searchIndex":["applicationcontroller","applicationjob","applicationrecord","authentication","company","current","generaterandommetricsjob","kpicomponent","linegraphcomponent","metric","metricscontroller","navbarcomponent","passwordscontroller","sensor","sensorcardcomponent","sensorscontroller","services","metricssimulator","pressuresimulator","rpmsimulator","sensorsimulator","sensorsimulatorfactory","session","sessionscontroller","user","after_authentication_url()","allow_unauthenticated_access()","authenticated?()","broadcast_metric()","broadcasteable_attributes()","build_metrics()","create()","create()","current_company()","destroy()","edit()","fast?()","fast?()","fast_rand_normal()","fast_rand_normal()","find_session_by_cookie()","generate_api_key()","get()","id()","index()","index()","load_previous_data()","logout()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_event()","next_event!()","next_rate()","next_rate()","next_value()","overview()","perform()","rand_normal()","rand_normal()","rand_normal()","rand_normal_05()","rand_normal_05()","real_time()","real_time()","request_authentication()","require_authentication()","resume_session()","set_user_by_token()","show()","simulate!()","slow?()","slow?()","start_new_session_for()","switch_mode!()","switch_mode!()","terminate_session()","title()","title()","unit()","update()","update_rate_switch()","update_rate_switch()","value()","value_is_date?()","values()","readme","kpi_component.html.slim","line_graph_component.html.slim","nav_bar_component.html.slim","sensor_card_component.html.slim"],"longSearchIndex":["applicationcontroller","applicationjob","applicationrecord","authentication","company","current","generaterandommetricsjob","kpicomponent","linegraphcomponent","metric","metricscontroller","navbarcomponent","passwordscontroller","sensor","sensorcardcomponent","sensorscontroller","services","services::metricssimulator","services::pressuresimulator","services::rpmsimulator","services::sensorsimulator","services::sensorsimulatorfactory","session","sessionscontroller","user","authentication#after_authentication_url()","authentication#allow_unauthenticated_access()","authentication#authenticated?()","metric#broadcast_metric()","metric#broadcasteable_attributes()","generaterandommetricsjob#build_metrics()","passwordscontroller#create()","sessionscontroller#create()","applicationcontroller#current_company()","sessionscontroller#destroy()","passwordscontroller#edit()","generaterandommetricsjob#fast?()","services::metricssimulator#fast?()","generaterandommetricsjob#fast_rand_normal()","services::metricssimulator#fast_rand_normal()","authentication#find_session_by_cookie()","user#generate_api_key()","services::sensorsimulatorfactory::get()","linegraphcomponent#id()","metricscontroller#index()","sensorscontroller#index()","metricscontroller#load_previous_data()","sessionscontroller#logout()","kpicomponent::new()","linegraphcomponent::new()","passwordscontroller#new()","sensorcardcomponent::new()","services::metricssimulator::new()","services::pressuresimulator::new()","services::rpmsimulator::new()","services::sensorsimulator::new()","sessionscontroller#new()","generaterandommetricsjob#next_event()","services::metricssimulator#next_event!()","generaterandommetricsjob#next_rate()","services::metricssimulator#next_rate()","services::sensorsimulator#next_value()","sensorscontroller#overview()","generaterandommetricsjob#perform()","generaterandommetricsjob#rand_normal()","services::metricssimulator#rand_normal()","services::sensorsimulator#rand_normal()","generaterandommetricsjob#rand_normal_05()","services::metricssimulator#rand_normal_05()","metricscontroller#real_time()","sensorscontroller#real_time()","authentication#request_authentication()","authentication#require_authentication()","authentication#resume_session()","passwordscontroller#set_user_by_token()","sensorscontroller#show()","services::metricssimulator#simulate!()","generaterandommetricsjob#slow?()","services::metricssimulator#slow?()","authentication#start_new_session_for()","generaterandommetricsjob#switch_mode!()","services::metricssimulator#switch_mode!()","authentication#terminate_session()","kpicomponent#title()","linegraphcomponent#title()","kpicomponent#unit()","passwordscontroller#update()","generaterandommetricsjob#update_rate_switch()","services::metricssimulator#update_rate_switch()","kpicomponent#value()","kpicomponent#value_is_date?()","linegraphcomponent#values()","","","","",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["Authentication","","Authentication.html","",""],["Company","","Company.html","","<p>Company model representing multi-tenant organizations\n<p>Companies serve as the top-level entity in the multi-tenant …\n"],["Current","","Current.html","",""],["GenerateRandomMetricsJob","","GenerateRandomMetricsJob.html","",""],["KPIComponent","","KPIComponent.html","",""],["LineGraphComponent","","LineGraphComponent.html","",""],["Metric","","Metric.html","","<p>Metric model representing sensor data readings\n<p>Metrics are time-series data points collected from sensors. …\n"],["MetricsController","","MetricsController.html","",""],["NavBarComponent","","NavBarComponent.html","",""],["PasswordsController","","PasswordsController.html","",""],["Sensor","","Sensor.html","","<p>Sensor model representing physical monitoring devices\n<p>Sensors are company-scoped devices that generate …\n"],["SensorCardComponent","","SensorCardComponent.html","",""],["SensorsController","","SensorsController.html","",""],["Services","","Services.html","",""],["Services::MetricsSimulator","","Services/MetricsSimulator.html","",""],["Services::PressureSimulator","","Services/PressureSimulator.html","","<p>Pressure sensor data simulator\n<p>Generates realistic pressure readings for industrial sensor monitoring. …\n"],["Services::RPMSimulator","","Services/RPMSimulator.html","","<p>RPM (Revolutions Per Minute) sensor data simulator\n<p>Generates realistic RPM readings for rotating machinery …\n"],["Services::SensorSimulator","","Services/SensorSimulator.html","","<p>Base class for sensor data simulation using normal distribution\n<p>This class provides a foundation for simulating …\n"],["Services::SensorSimulatorFactory","","Services/SensorSimulatorFactory.html","","<p>Factory class for creating sensor simulator instances\n<p>Implements the Factory pattern to provide a centralized …\n"],["Session","","Session.html","",""],["SessionsController","","SessionsController.html","",""],["User","","User.html","","<p>User model representing system users with authentication and API access\n<p>Users belong to companies in a …\n"],["after_authentication_url","Authentication","Authentication.html#method-i-after_authentication_url","()",""],["allow_unauthenticated_access","Authentication","Authentication.html#method-i-allow_unauthenticated_access","(**options)",""],["authenticated?","Authentication","Authentication.html#method-i-authenticated-3F","()",""],["broadcast_metric","Metric","Metric.html#method-i-broadcast_metric","()","<p>Broadcasts the metric data via ActionCable\n<p>Sends the metric data to all subscribers of the sensor’s …\n"],["broadcasteable_attributes","Metric","Metric.html#method-i-broadcasteable_attributes","()","<p>Returns attributes suitable for ActionCable broadcasting\n<p>Provides a filtered set of attributes for real-time …\n"],["build_metrics","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-build_metrics","(sensor)",""],["create","PasswordsController","PasswordsController.html#method-i-create","()",""],["create","SessionsController","SessionsController.html#method-i-create","()",""],["current_company","ApplicationController","ApplicationController.html#method-i-current_company","()",""],["destroy","SessionsController","SessionsController.html#method-i-destroy","()",""],["edit","PasswordsController","PasswordsController.html#method-i-edit","()",""],["fast?","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-fast-3F","(= @mode == :fast)",""],["fast?","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-fast-3F","(= @mode == :fast)",""],["fast_rand_normal","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-fast_rand_normal","()",""],["fast_rand_normal","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-fast_rand_normal","()",""],["find_session_by_cookie","Authentication","Authentication.html#method-i-find_session_by_cookie","()",""],["generate_api_key","User","User.html#method-i-generate_api_key","()","<p>Generates a unique API key for the user\n<p>This method is automatically called before user creation to ensure …\n"],["get","Services::SensorSimulatorFactory","Services/SensorSimulatorFactory.html#method-c-get","(kind:)","<p>Creates a sensor simulator instance based on the specified type\n<p>@param kind [Symbol] the type of simulator …\n"],["id","LineGraphComponent","LineGraphComponent.html#method-i-id","(= @sensor ? helpers.dom_id(sensor) : SecureRandom.uuid)",""],["index","MetricsController","MetricsController.html#method-i-index","()",""],["index","SensorsController","SensorsController.html#method-i-index","()",""],["load_previous_data","MetricsController","MetricsController.html#method-i-load_previous_data","()",""],["logout","SessionsController","SessionsController.html#method-i-logout","()",""],["new","KPIComponent","KPIComponent.html#method-c-new","(title:, value:, unit: nil)",""],["new","LineGraphComponent","LineGraphComponent.html#method-c-new","(title:, values:, topics:, sensor: nil)",""],["new","PasswordsController","PasswordsController.html#method-i-new","()",""],["new","SensorCardComponent","SensorCardComponent.html#method-c-new","(name:, kind:, code:, icon:)",""],["new","Services::MetricsSimulator","Services/MetricsSimulator.html#method-c-new","(sensor, kind, start_time: 1.hours.ago, end_time: Time.current)",""],["new","Services::PressureSimulator","Services/PressureSimulator.html#method-c-new","()","<p>Initializes a pressure simulator with industry-standard parameters\n<p>Sets up the normal distribution with …\n"],["new","Services::RPMSimulator","Services/RPMSimulator.html#method-c-new","()","<p>Initializes an RPM simulator with machinery-appropriate parameters\n<p>Sets up the normal distribution with …\n"],["new","Services::SensorSimulator","Services/SensorSimulator.html#method-c-new","(mean:, stddev:, min: 0, max: 100)","<p>Initializes a new sensor simulator with distribution parameters\n<p>@param mean [Numeric] the center point …\n"],["new","SessionsController","SessionsController.html#method-i-new","()",""],["next_event","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-next_event","()",""],["next_event!","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-next_event-21","()",""],["next_rate","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-next_rate","()",""],["next_rate","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-next_rate","()",""],["next_value","Services::SensorSimulator","Services/SensorSimulator.html#method-i-next_value","()","<p>Generates the next sensor reading value\n<p>Uses the configured normal distribution parameters to generate …\n"],["overview","SensorsController","SensorsController.html#method-i-overview","()",""],["perform","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-perform","(*args)",""],["rand_normal","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-rand_normal","(mean: 10, stddev: 2.5, min: 5, max: 20)",""],["rand_normal","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-rand_normal","(mean: 10, stddev: 1.6, min: 5, max: 20)",""],["rand_normal","Services::SensorSimulator","Services/SensorSimulator.html#method-i-rand_normal","(mean: 10, stddev: 2.5, min: 5, max: 20)","<p>Generates a normally distributed random value using Box-Muller transformation\n<p>This method implements the …\n"],["rand_normal_05","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-rand_normal_05","(= rand_normal(mean: 0.5, stddev: 0.25, min: 0, max: 1).round(4))",""],["rand_normal_05","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-rand_normal_05","(= rand_normal(mean: 2, stddev: 0.5, min: 0.5, max: 4).round(2))",""],["real_time","MetricsController","MetricsController.html#method-i-real_time","()",""],["real_time","SensorsController","SensorsController.html#method-i-real_time","()",""],["request_authentication","Authentication","Authentication.html#method-i-request_authentication","()",""],["require_authentication","Authentication","Authentication.html#method-i-require_authentication","()",""],["resume_session","Authentication","Authentication.html#method-i-resume_session","()",""],["set_user_by_token","PasswordsController","PasswordsController.html#method-i-set_user_by_token","()",""],["show","SensorsController","SensorsController.html#method-i-show","()",""],["simulate!","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-simulate-21","()",""],["slow?","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-slow-3F","(= !fast?)",""],["slow?","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-slow-3F","(= !fast?)",""],["start_new_session_for","Authentication","Authentication.html#method-i-start_new_session_for","(user)",""],["switch_mode!","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-switch_mode-21","()",""],["switch_mode!","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-switch_mode-21","()",""],["terminate_session","Authentication","Authentication.html#method-i-terminate_session","()",""],["title","KPIComponent","KPIComponent.html#method-i-title","(= @title.titleize)",""],["title","LineGraphComponent","LineGraphComponent.html#method-i-title","(= @title.titleize)",""],["unit","KPIComponent","KPIComponent.html#method-i-unit","(= @unit&.titleize || '&nbsp'.html_safe)",""],["update","PasswordsController","PasswordsController.html#method-i-update","()",""],["update_rate_switch","GenerateRandomMetricsJob","GenerateRandomMetricsJob.html#method-i-update_rate_switch","()",""],["update_rate_switch","Services::MetricsSimulator","Services/MetricsSimulator.html#method-i-update_rate_switch","()",""],["value","KPIComponent","KPIComponent.html#method-i-value","()",""],["value_is_date?","KPIComponent","KPIComponent.html#method-i-value_is_date-3F","()",""],["values","LineGraphComponent","LineGraphComponent.html#method-i-values","(= @values.to_json)",""],["README","","README_md.html","","<p>README\n<p>Requirement\n<p>Tarea técnica: Dashboard de Analítica en Tiempo Real\n"],["kpi_component.html.slim","","app/components/kpi_component/kpi_component_html_slim.html","","<p>.card\n\n<pre>.card-body[data-raw-value=&quot;#{@value}&quot;]\n  h3 = title\n  p.display-4.text-center\n\n    - if value_is_date? ...</pre>\n"],["line_graph_component.html.slim","","app/components/line_graph_component/line_graph_component_html_slim.html","","<p>h2 = title .card[data-controller=“linegraph” data-linegraph-data-value=values]\n\n<pre>.card-body\n  ...</pre>\n"],["nav_bar_component.html.slim","","app/components/nav_bar_component/nav_bar_component_html_slim.html","","<p>nav.navbar.navbar-expand-lg.bg-body-tertiary.mb-2\n\n<pre>.container\n  a.navbar-brand MAF\n  button.navbar-toggler[type=&#39;button&#39; ...</pre>\n"],["sensor_card_component.html.slim","","app/components/sensor_card_component/sensor_card_component_html_slim.html","","<p>div Add SensorCard template here\n"]]}}